import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as r,c as a,e as t}from"./app.010c637d.js";const n={},i=t(`<h2 id="leetcode-26-remove-duplicates-from-sorted-array-javascript" tabindex="-1"><a class="header-anchor" href="#leetcode-26-remove-duplicates-from-sorted-array-javascript" aria-hidden="true">#</a> Leetcode 26- Remove Duplicates from Sorted Array(JavaScript)</h2><h4 id="problem-read-at-leetcode" tabindex="-1"><a class="header-anchor" href="#problem-read-at-leetcode" aria-hidden="true">#</a> Problem: Read at <a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener noreferrer">leetcode</a></h4><p>In short we have to edit the existing array <strong>(no you cannot initialize new array to store output )</strong> and return <code>k</code> (number of dublicate items)</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example:</h4><p><strong>Input</strong>: nums = [1,1,2]</p><p><strong>Output</strong>: 2, nums = [1,2,_]</p><h2 id="solution" tabindex="-1"><a class="header-anchor" href="#solution" aria-hidden="true">#</a> Solution:</h2><p>Althogh this problem looks scary at first glance, it&#39;s not that hard once you understand how to solve it. Here we will use sliding window technique to solve this problem.</p><h3 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode" aria-hidden="true">#</a> Pseudocode:</h3><h4 id="assume-that-our-array-is-assending-order" tabindex="-1"><a class="header-anchor" href="#assume-that-our-array-is-assending-order" aria-hidden="true">#</a> Assume that our array is assending order</h4><ol><li><p>Initialize <code>l = 1</code> to represent left side of the window</p></li><li><p>Initialize <code>r = 1</code> to represent right side</p></li><li><p>Start <code>for</code> loop to iterate through every elemnt of array</p></li><li><p>Now we basically check current element of array with one step left side of the array</p></li><li><p>If they are not same (unique)</p></li><li><p>We change our element at left to current right elemt and increase left by 1</p></li><li><p>At the end of for loop, we have number of unique values at <code>l</code></p></li></ol><h6 id="to-understand-more-checkout-neetcode" tabindex="-1"><a class="header-anchor" href="#to-understand-more-checkout-neetcode" aria-hidden="true">#</a> To understand more checkout <a href="https://www.youtube.com/watch?v=DEJAZBq0FDA" target="_blank" rel="noopener noreferrer">neetcode</a></h6><h2 id="algorithm" tabindex="-1"><a class="header-anchor" href="#algorithm" aria-hidden="true">#</a> Algorithm:</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>/**
 * @param {number[]} nums
 * @return {number}
 */
var removeDuplicates = function(nums) {
    let l = 1
    for(let r = 1; r &lt; nums.length; r++){
        if(nums[r] != nums[r-1]){
            nums[l] = nums[r]
            l = l + 1
        }
    }
    return l
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Well Done !!!</p>`,15),o=[i];function d(s,l){return r(),a("div",null,o)}var h=e(n,[["render",d],["__file","26. Remove Duplicates from Sorted Array.html.vue"]]);export{h as default};
