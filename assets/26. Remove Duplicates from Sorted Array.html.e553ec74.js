import{_ as o,r,o as p,c,a as n,b as e,F as l,d as a,e as t}from"./app.24ada50a.js";const i={},u=n("h2",{id:"leetcode-26-remove-duplicates-from-sorted-array-javascript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#leetcode-26-remove-duplicates-from-sorted-array-javascript","aria-hidden":"true"},"#"),a(" Leetcode 26- Remove Duplicates from Sorted Array(JavaScript)")],-1),d={id:"problem-read-at-leetcode",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#problem-read-at-leetcode","aria-hidden":"true"},"#",-1),m=a(" Problem: Read at "),k={href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"},b=a("leetcode"),_=t('<p>In short we have to edit the existing array <strong>(no you cannot initialize new array to store output )</strong> and return <code>k</code> (number of dublicate items)</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example:</h4><p><strong>Input</strong>: nums = [1,1,2]</p><p><strong>Output</strong>: 2, nums = [1,2,_]</p><h2 id="solution" tabindex="-1"><a class="header-anchor" href="#solution" aria-hidden="true">#</a> Solution:</h2><p>Althogh this problem looks scary at first glance, it&#39;s not that hard once you understand how to solve it. Here we will use sliding window technique to solve this problem.</p><h3 id="pseudocode" tabindex="-1"><a class="header-anchor" href="#pseudocode" aria-hidden="true">#</a> Pseudocode:</h3><h4 id="assume-that-our-array-is-assending-order" tabindex="-1"><a class="header-anchor" href="#assume-that-our-array-is-assending-order" aria-hidden="true">#</a> Assume that our array is assending order</h4><ol><li><p>Initialize <code>l = 1</code> to represent left side of the window</p></li><li><p>Initialize <code>r = 1</code> to represent right side</p></li><li><p>Start <code>for</code> loop to iterate through every elemnt of array</p></li><li><p>Now we basically check current element of array with one step left side of the array</p></li><li><p>If they are not same (unique)</p></li><li><p>We change our element at left to current right elemt and increase left by 1</p></li><li><p>At the end of for loop, we have number of unique values at <code>l</code></p></li></ol>',9),f={id:"to-understand-more-checkout-neetcode",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#to-understand-more-checkout-neetcode","aria-hidden":"true"},"#",-1),g=a(" To understand more checkout "),v={href:"https://www.youtube.com/watch?v=DEJAZBq0FDA",target:"_blank",rel:"noopener noreferrer"},w=a("neetcode"),x=t(`<h2 id="algorithm" tabindex="-1"><a class="header-anchor" href="#algorithm" aria-hidden="true">#</a> Algorithm:</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">!=</span> nums<span class="token punctuation">[</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span>
            l <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> l
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Well Done !!!</p>`,3);function A(D,I){const s=r("ExternalLinkIcon");return p(),c(l,null,[u,n("h4",d,[h,m,n("a",k,[b,e(s)])]),_,n("h6",f,[y,g,n("a",v,[w,e(s)])]),x],64)}var j=o(i,[["render",A],["__file","26. Remove Duplicates from Sorted Array.html.vue"]]);export{j as default};
